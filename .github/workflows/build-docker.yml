---
name: Build docker image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - 'src/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

env:
  APPLICATION_NAME: cert-manager-plesk-webhook
  DOCKER_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/cert-manager-plesk-webhook

jobs:
  security_scanning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build (but not push) Docker image
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          file: Dockerfile
          tags: ${{ env.APPLICATION_NAME}}:latest
      - name: Aqua Security Trivy
        uses: aquasecurity/trivy-action@0.9.2
        with:
          image-ref: ${{ env.APPLICATION_NAME}}:latest
  build_docker_image:
    name: Build docker image
    needs: security_scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        id: push
        uses: docker/build-push-action@v3
        with:
          push: true
          load: true
          file: Dockerfile
          tags: ${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
